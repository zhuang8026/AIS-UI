@mixin placeholder($color){
    ::placeholder { /* CSS 3 標準 */
        color: $color;
    }
    ::-webkit-input-placeholder { /* Chrome, Safari */
        color: $color;
    }
    
    :-ms-input-placeholder { /* IE 10+ */
        color: $color;
    }
    ::-moz-placeholder { /* Firefox 19+ */
        color: $color;
        opacity: 1;
    }
}

//  =====  arrow, triangle .. css painting icon ===== 

// 01-1 arrow
@mixin arrowTop($arrowWidth, $arrowSize, $arrowColor) {
    border: solid $arrowColor;
    border-width: 0 $arrowWidth $arrowWidth 0;
    display: inline-block;
    padding: $arrowSize;
    transform: rotate(-135deg);
    -webkit-transform: rotate(-135deg);

}
@mixin arrowDown($arrowWidth, $arrowSize, $arrowColor) {
    border: solid $arrowColor;
    border-width: 0 $arrowWidth $arrowWidth 0;
    display: inline-block;
    padding: $arrowSize;
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg);

}
@mixin arrowRight($arrowWidth, $arrowSize, $arrowColor) {
    border: solid $arrowColor;
    border-width: 0 $arrowWidth $arrowWidth 0;
    display: inline-block;
    padding: $arrowSize;
    transform: rotate(-45deg);
    -webkit-transform: rotate(-45deg);

}
@mixin arrowLeft($arrowWidth, $arrowSize, $arrowColor) {
    border: solid $arrowColor;
    border-width: 0 $arrowWidth $arrowWidth 0;
    display: inline-block;
    padding: $arrowSize;
    transform: rotate(135deg);
    -webkit-transform: rotate(135deg);

}

// 01-2 triangleFlat
@mixin triangleTopFlat($triangeWidth, $trinagleColor, $trinaglebg) {
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0 $triangeWidth $triangeWidth $triangeWidth;
    border-color: $trinaglebg $trinaglebg $trinagleColor $trinaglebg;
    display: inline-block;
    vertical-align: middle;
}

@mixin triangleDownFlat($triangeWidth, $trinagleColor, $trinaglebg) {
    width: 0;
    height: 0;
    border-style: solid;
    border-width: $triangeWidth $triangeWidth 0 $triangeWidth;
    border-color: $trinagleColor $trinaglebg $trinaglebg $trinaglebg;
    display: inline-block;
    vertical-align: middle;
}

@mixin triangleRightFlat($triangeWidth, $trinagleColor, $trinaglebg) {
    width: 0;
    height: 0;
    border-style: solid;
    border-width: $triangeWidth 0 $triangeWidth $triangeWidth;
    border-color: $trinaglebg $trinaglebg $trinaglebg $trinagleColor;
    display: inline-block;
    vertical-align: middle;
}

@mixin triangleLeftFlat($triangeWidth, $trinagleColor, $trinaglebg) {
    width: 0;
    height: 0;
    border-style: solid;
    border-width: $triangeWidth $triangeWidth $triangeWidth 0;
    border-color: $trinaglebg $trinagleColor $trinaglebg $trinaglebg;
    display: inline-block;
    vertical-align: middle;
}



// 01-3 triangle
@mixin triangle90RightTop($triangeWidth, $triangleHeight, $trinagleColor, $trinaglebg) {
    width: 0;
    height: 0;
    border-style: solid;
    border-width: $triangleHeight 0 0 $triangeWidth;
    border-color: $trinaglebg $trinaglebg $trinaglebg $trinagleColor;
}
@mixin triangle90LeftTop($triangeWidth, $triangleHeight, $trinagleColor, $trinaglebg) {
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0 0 $triangleHeight $triangeWidth;
    border-color: $trinaglebg $trinaglebg $trinagleColor $trinaglebg;
}
@mixin triangle90LeftDown($triangeWidth, $triangleHeight, $trinagleColor, $trinaglebg) {
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0 0 $triangeWidth $triangleHeight;
    border-color: $trinaglebg $trinagleColor $trinaglebg $trinaglebg;
}
@mixin triangle90RightDown($triangeWidth, $triangleHeight, $trinagleColor, $trinaglebg) {
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0 0 $triangeWidth $triangleHeight;
    border-color: $trinagleColor $trinaglebg $trinaglebg $trinaglebg;
}


// check 


@mixin checkMarkBase($normalColor, $scaleVal:1){
    .checkmark {
        display:inline-block;
        width: 100%;
        height: 100%;
        -ms-transform: rotate(45deg) scale($scaleVal); /* IE 9 */
        -webkit-transform: rotate(45deg) scale($scaleVal); /* Chrome, Safari, Opera */
        transform: rotate(45deg) scale($scaleVal);
    }
    
    .checkmark_stem {
        position: absolute;
        width:2px;
        height:11px;
        background-color:$normalColor;
        left:8px;
        top: 1px;
    }
    
    .checkmark_kick {
        position: absolute;
        width:6px;
        height:2px;
        background-color:$normalColor;
        left:4px;
        top:10px;
    }
}




@mixin checkMarkActive($activeColor){
    .checkmark_stem {
        background-color:$activeColor;
    }
    
    .checkmark_kick {
        background-color:$activeColor;
    }
}